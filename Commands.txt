mkdir code-editing-agent
cd code-editing-agent
go mod init agent

#First Version
----------------------
# Download the dependencies
go mod tidy
go run ch01/main.go
------------------------
# Hey! I'm Mohit! How are you?
# Can you come up with any nicknames that make fun of my first name?

# Chapter 1: Explain the hypothesis and run the hypothesis
----------------------
# The basic idea is : you send a prompt to the model that says it should reply in a certain way if it wants to use “a tool”. Then you, as the receiver of that message, “use the tool” by executing it and replying with the result. 

# You are a weather expert. When I ask you about the weather in a given location, I want you to reply with `get_weather(<location_name>)`. I will then tell you what the weather in that location is. Understood?

# Wait for response 

# Hey, what's the weather in Munich?

# Wait for response 

# hot and humid, 28 degrees celcius
--------------------------
Also explain below links 
Client Tools:
- https://docs.anthropic.com/en/docs/agents-and-tools/tool-use/overview
- https://docs.anthropic.com/en/docs/agents-and-tools/tool-use/computer-use-tool
- https://docs.anthropic.com/en/docs/agents-and-tools/tool-use/text-editor-tool 
Server Tools:
- https://docs.anthropic.com/en/docs/agents-and-tools/tool-use/web-search-tool 
--------------------------
# Chapter 2: Build first tool - readFile
cd ch02
go run main.go

# Explain what's in secret-file.txt
# Claude, buddy, help me solve the riddle in the secret-file.txt file

# Pretty cool right. You just give LLM a tool and it uses it when it thinks it’ll help solve the task. 
# Remember: we didn’t say anything about “if a user asks you about a file, read the file”. We also didn’t say “if something looks like a filename, figure out how to read it”. No, none of that. We say “help me solve the thing in this file” and Claude realizes that it can read the file to answer that and off it goes.

# what's in main.go?
# What's going on in main.go? Be brief!
--------------------------
# Chapter 3: Build more tools - List files 

cd ch03
go run main.go

# what do you see in this directory?
# Tell me about all the Go files in here. Be brief!

# Pretty cool - It's combining tools now 

# What go version are we using in this project?

--------------------------
# Chapter 4: Add one more tool - Edit files 

cd ch04
go run main.go

# hey claude, create fizzbuzz.js that I can run with Nodejs and that has fizzbuzz in it and executes it

node fizzbuzz.js

# Please edit fizzbuzz.js so that it only prints until 15

# Create a thankyou.js script that rot13-decodes the following string ‘Gunax lbh sbe nggraqvat Feninan naq Fureva, obgu bs lbh ner nznmvat!’ and prints it

node thankyou.js

# Create a closing.js script that rot13-decodes the following string ‘Pbatenghyngvbaf ba ohvyqvat n pbqr-rqvgvat ntrag!’ and prints it

node closing.js
--------------------------
